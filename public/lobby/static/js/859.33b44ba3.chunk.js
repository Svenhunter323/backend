"use strict";(globalThis.webpackChunkreact_project=globalThis.webpackChunkreact_project||[]).push([[859],{5859:(e,a,t)=>{t.d(a,{offchainLookup:()=>k,offchainLookupSignature:()=>b});var s=t(4624),r=t(2102),n=t(170),o=t(7612);class c extends n.C{constructor({callbackSelector:e,cause:a,data:t,extraData:s,sender:r,urls:n}){super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],a.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map(e=>`    ${(0,o.I)(e)}`)],`  Sender: ${r}`,`  Data: ${t}`,`  Callback selector: ${e}`,`  Extra data: ${s}`].flat(),name:"OffchainLookupError"})}}class d extends n.C{constructor({result:e,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,o.I)(a)}`,`Response: ${(0,r.A)(e)}`],name:"OffchainLookupResponseMalformedError"})}}class u extends n.C{constructor({sender:e,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${e}`],name:"OffchainLookupSenderMismatchError"})}}var i=t(9284),l=t(3531),p=t(8944),f=t(7901),h=t(8220);var w=t(1546),y=t(4537),m=t(935);const b="0x556f1830",g={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function k(e,{blockNumber:a,blockTag:t,data:r,to:n}){const{args:o}=(0,l.W)({data:r,abi:[g]}),[d,i,y,b,k]=o,{ccipRead:x}=e,L=x&&"function"===typeof x?.request?x.request:C;try{if(!function(e,a){if(!(0,h.P)(e,{strict:!1}))throw new f.M({address:e});if(!(0,h.P)(a,{strict:!1}))throw new f.M({address:a});return e.toLowerCase()===a.toLowerCase()}(n,d))throw new u({sender:d,to:n});const r=i.includes(m.J)?await(0,m.X)({data:y,ccipRequest:L}):await L({data:y,sender:d,urls:i}),{data:o}=await(0,s.T)(e,{blockNumber:a,blockTag:t,data:(0,w.xW)([b,(0,p.h)([{type:"bytes"},{type:"bytes"}],[r,k])]),to:n});return o}catch(T){throw new c({callbackSelector:b,cause:T,data:r,extraData:k,sender:d,urls:i})}}async function C({data:e,sender:a,urls:t}){let s=new Error("An unknown error occurred.");for(let o=0;o<t.length;o++){const c=t[o],u=c.includes("{data}")?"GET":"POST",l="POST"===u?{data:e,sender:a}:void 0,p="POST"===u?{"Content-Type":"application/json"}:{};try{const t=await fetch(c.replace("{sender}",a.toLowerCase()).replace("{data}",e),{body:JSON.stringify(l),headers:p,method:u});let n;if(n=t.headers.get("Content-Type")?.startsWith("application/json")?(await t.json()).data:await t.text(),!t.ok){s=new i.Ci({body:l,details:n?.error?(0,r.A)(n.error):t.statusText,headers:t.headers,status:t.status,url:c});continue}if(!(0,y.q)(n)){s=new d({result:n,url:c});continue}return n}catch(n){s=new i.Ci({body:l,details:n.message,url:c})}}throw s}}}]);
//# sourceMappingURL=859.33b44ba3.chunk.js.map